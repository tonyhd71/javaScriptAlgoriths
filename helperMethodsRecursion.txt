design patters: (this code doesnt do anything)
function outer(input) {
    let outerScopedVariable = [];

    function helper(helperInput) {
        //modify the outerScopedVariable
        helper(helperInput--);
    }
    helper(input);
    return outerScopedVariable;
}
we have two functions: The outer function, and inside the recursive function.
The inner function calls itself recursively

ANOTHER example: let's try to collect all of the odd values in  an array!

function collectOddValues(arr) {
    let result = [];

    function helper(helperInput) {
        if (helperInput.length === 0) {
            return;
        }
        if (helperInput[0] % 2 !== 0) {
            result.push(helperInput[0]);
        }
        helper(helperInput.slice(1));
    }
    helper(arr);
    return result;
}

