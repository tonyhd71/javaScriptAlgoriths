SLIDING WINDOW
This pattern involves creating a window which can either be an array or number from one position to another

Depending on a certain condition, the window either increases or closes (and a new window is created)

Very useful for keeping track of a subset of data in an arrat/string etc.
for example, you can use sliding window to find the longest sequence of unique values in the string 'hellothere', which is lother

Another example is to find a maxSubarraySum:

Write a function called maxSubarraySum which accepts an array of integers and a number called n. The function should calculate the maximum sum of n consecutive elements in the array.
maxSubArray([1,2,5,2,8,1,5],2) //10
maxSubArray([1,2,5,2,8,1,5],4) //17
maxSubArray([4,2,1,6],1) //10
maxSubArray([4,2,1,6,2]],4) //13
maxSubArray([],4) // null
			DIVIDE AND CONQUER
	this patters involves dividingn a data set into smaller chunks and then
repeating a process with a subset of data.
This pattern can tremendously decrease time complexity/
